## all available settings of specific linters
#linters-settings:
#  errcheck:
#    # report about not checking of errors in types assetions: `a := b.(MyStruct)`;
#    # default is false: such cases aren't reported by default.
#    check-type-assertions: false
#
#    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
#    # default is false: such cases aren't reported by default.
#    check-blank: false
#  govet:
#    # report about shadowed variables
#    check-shadowing: true
#    fieldalignment: true
#  golint:
#    # minimal confidence for issues, default is 0.8
#    min-confidence: 0.8
#  gofmt:
#    # simplify code: gofmt with `-s` option, true by default
#    simplify: true
#  goimports:
#    # put imports beginning with prefix after 3rd-party packages;
#    # it's a comma-separated list of prefixes
#    local-prefixes: github.com/ydb-platform/ydb-go-sdk/v3
#  goconst:
#    # minimal length of string constant, 3 by default
#    min-len: 2
#    # minimal occurrences count to trigger, 3 by default
#    min-occurrences: 2
#  fieldalignment:
#    # print struct with more effective memory layout or not, false by default
#    suggest-new: true
#  misspell:
#    # Correct spellings using locale preferences for US or UK.
#    # Default is to use a neutral variety of English.
#    # Setting locale to US will correct the British spelling of 'colour' to 'color'.
#    locale: US
#    ignore-words:
#      - cancelled
#  revive:
#    rules:
#      - name: blank-imports
#      - name: context-as-argument
#      - name: context-keys-type
#      - name: dot-imports
#      - name: error-return
#      - name: error-strings
#      - name: error-naming
#      - name: exported
#      - name: if-return
#      - name: increment-decrement
#      - name: var-naming
#      - name: var-declaration
#      - name: package-comments
#      - name: range
#      - name: receiver-naming
#      - name: time-naming
#      - name: indent-error-flow
#      - name: errorf
#      - name: empty-block
#      - name: superfluous-else
#      - name: unreachable-code
#  unused:
#    # treat code as a program (not a library) and report unused exported identifiers; default is false.
#    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:
#    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations
#    # with golangci-lint call it on a directory with the changed file.
#    check-exported: false
#  unparam:
#    # call graph construction algorithm (cha, rta). In general, use cha for libraries,
#    # and rta for programs with main packages. Default is cha.
#    algo: cha
#
#    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
#    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
#    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
#    # with golangci-lint call it on a directory with the changed file.
#    check-exported: false
#
#linters:
#  disable-all: true
#  enable:
#    #    - cyclop
#    - deadcode
#    - depguard
#    - dogsled
#    #    - dupl
#    - errcheck
#    - errorlint
#    #    - exhaustive
#    #    - exhaustivestruct
#    #    - forbidigo
#    #    - funlen
#    #    - gci
#    #    - gocognit
#    - goconst
#    - gocritic
#    - gocyclo
#    #    - godot
#    - godox
#    - gofmt # On why gofmt when goimports is enabled - https://github.com/golang/go/issues/21476
#    - gofumpt
#    - goheader
#    - goimports
#    #    - gomnd
#    #    - gomoddirectives
#    #    - gomodguard
#    - gosec
#    - gosimple
#    - govet
#    - depguard
#    #    - ifshort
#    #    - ireturn
#    - lll
#    - makezero
#    - maligned
#    - misspell
#    - ineffassign
#    - misspell
#    - nakedret
#    - nestif
#    #    - nilnil
#    #    - nlreturn
#    - nolintlint
#    - prealloc
#    - predeclared
#    - rowserrcheck
#    - revive
#    - staticcheck
#    - stylecheck
#    - structcheck
#    #    - tagliatelle
#    #    - testpackage
#    #    - thelper
#    #    - tenv
#    - typecheck
#    - unconvert
#    - unparam
#    - unused
#    #    - varnamelen
#    - varcheck
#    - whitespace
##    - wrapcheck
##    - wsl